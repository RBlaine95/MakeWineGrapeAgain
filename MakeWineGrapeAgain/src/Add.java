
import java.io.FileNotFoundException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Se7en
 */
public class Add extends javax.swing.JFrame {

    boolean colourRan = false;
    boolean typeRan = false;
    boolean colourOverride, colourbool, typeOverride, typebool;
    AddSupplier as = null;

    /**
     * Creates new form Add
     */
    public Add() {
        initComponents();

        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                cancelBtn.doClick();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        colourBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        typeBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        stageBox = new javax.swing.JComboBox();
        colourOverrideTxt = new javax.swing.JTextField();
        typeOverrideTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        massTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        supplierBox = new javax.swing.JComboBox();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        colourLbl = new javax.swing.JLabel();
        typeLbl = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        yearTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Colour");

        colourBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                colourBoxItemStateChanged(evt);
            }
        });
        colourBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colourBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Type");

        typeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeBoxActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Stage");

        stageBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Storage", "Crushing", "Fermentation", "Pressed", "Maturation", "Blending", "Prep for Bottling", "Bottling" }));

        colourOverrideTxt.setEditable(false);
        colourOverrideTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                colourOverrideTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                colourOverrideTxtKeyReleased(evt);
            }
        });

        typeOverrideTxt.setEditable(false);
        typeOverrideTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                typeOverrideTxtKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Mass in KG");

        massTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                massTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                massTxtKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Supplier");

        supplierBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierBoxActionPerformed(evt);
            }
        });

        okBtn.setText("OK");
        okBtn.setEnabled(false);
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        colourLbl.setForeground(new java.awt.Color(255, 0, 0));
        colourLbl.setText("OVERRIDING");
        colourLbl.setEnabled(false);

        typeLbl.setForeground(new java.awt.Color(255, 0, 0));
        typeLbl.setText("OVERRIDING");
        typeLbl.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Vintage");

        yearTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yearTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                yearTxtKeyReleased(evt);
            }
        });

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        jLabel9.setText("Notes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stageBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supplierBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(colourBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(massTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(colourOverrideTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(colourLbl))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(typeOverrideTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(typeLbl))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(okBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(stageBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(massTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(yearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(colourBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(colourLbl)
                            .addComponent(colourOverrideTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(typeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeLbl)
                            .addComponent(typeOverrideTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(supplierBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(7, 7, 7)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 11, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okBtn)
                    .addComponent(cancelBtn)))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 70, 520, 260);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Create New Batch");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(120, 10, 163, 22);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagery/WoodNew.jpg"))); // NOI18N
        getContentPane().add(jLabel8);
        jLabel8.setBounds(0, 0, 710, 510);

        setSize(new java.awt.Dimension(716, 540));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void colourBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colourBoxActionPerformed
        this.colourCheck();
        if (this.colourBox.getSelectedItem() == "Override") {
            this.colourOverrideTxt.setEditable(true);
            this.colourLbl.setEnabled(true);
        } else {
            this.colourLbl.setEnabled(false);
            this.colourOverrideTxt.setEditable(false);
        }
    }//GEN-LAST:event_colourBoxActionPerformed

    private void typeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeBoxActionPerformed
        this.typeCheck();
        if (this.typeBox.getSelectedItem() == "Override") {
            this.typeOverrideTxt.setEditable(true);
            this.typeLbl.setEnabled(true);
        } else {
            this.typeLbl.setEnabled(false);
            this.typeOverrideTxt.setEditable(false);
        }
    }//GEN-LAST:event_typeBoxActionPerformed

    private void supplierBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierBoxActionPerformed
        if (this.supplierBox.getSelectedItem().equals("New Supplier...")) {
            as = new AddSupplier();
            as.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_supplierBoxActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
        String batch, colour, type, stage, mass, supplier, year;

        if (this.colourOverride) {
            colour = this.colourOverrideTxt.getText();
            Pinwheel.learnColour(colour);
        } else {
            colour = this.colourBox.getSelectedItem() + "";
        }
        if (this.typeOverride) {
            type = this.typeOverrideTxt.getText();
            Pinwheel.learnType(type);
        } else {
            type = this.typeBox.getSelectedItem() + "";
        }
        if (this.supplierBox.getSelectedIndex() == 0) {
            System.out.println("hdauhidilhajh");
        }
        year = this.yearTxt.getText();
        stage = this.stageBox.getSelectedItem() + "";
        mass = this.massTxt.getText();
        supplier = this.supplierBox.getSelectedItem() + "";

        String code = colour.substring(0, 2).toUpperCase();

        String sql = "SELECT COUNT(*) FROM batch";
        String note = txtArea.getText();
        try {
            ResultSet rs = Pinwheel.queryCCDB(sql);
            rs.next();
            int id = rs.getInt(1);
            batch = "" + code + year.substring(2) + type.substring(0, 3).toUpperCase() + (id + 1);
            String[] temp = {batch, colour, type, stage, mass, supplier, note};
            Pinwheel.setData(temp);

            Pinwheel.insertBatch();
            Pinwheel.createChem();
            Pinwheel.createSpecGraph(temp[0]);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_okBtnActionPerformed

    private void massTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_massTxtKeyReleased
        massTxt.setText(Pinwheel.numEx(massTxt.getText()));
        this.check();
    }//GEN-LAST:event_massTxtKeyReleased

    private void typeOverrideTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_typeOverrideTxtKeyReleased
        this.typeCheck();
    }//GEN-LAST:event_typeOverrideTxtKeyReleased

    private void colourOverrideTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_colourOverrideTxtKeyReleased
        this.colourCheck();
    }//GEN-LAST:event_colourOverrideTxtKeyReleased

    private void yearTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearTxtKeyReleased
        yearTxt.setText(Pinwheel.numEx(yearTxt.getText()));
        this.check();
    }//GEN-LAST:event_yearTxtKeyReleased

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        try {
            this.refresh();
        } catch (SQLException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formComponentShown

    private void yearTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearTxtKeyPressed
        yearTxt.setText(Pinwheel.numEx(yearTxt.getText()));
    }//GEN-LAST:event_yearTxtKeyPressed

    private void massTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_massTxtKeyPressed
        massTxt.setText(Pinwheel.numEx(massTxt.getText()));
    }//GEN-LAST:event_massTxtKeyPressed

    private void colourOverrideTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_colourOverrideTxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_colourOverrideTxtKeyPressed

    private void colourBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_colourBoxItemStateChanged

    }//GEN-LAST:event_colourBoxItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox colourBox;
    private javax.swing.JLabel colourLbl;
    private javax.swing.JTextField colourOverrideTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField massTxt;
    private javax.swing.JButton okBtn;
    private javax.swing.JComboBox stageBox;
    private javax.swing.JComboBox supplierBox;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JComboBox typeBox;
    private javax.swing.JLabel typeLbl;
    private javax.swing.JTextField typeOverrideTxt;
    private javax.swing.JTextField yearTxt;
    // End of variables declaration//GEN-END:variables

    public void colourCheck() {
        colourRan = true;

        colourOverride = this.colourBox.getSelectedItem().equals("Override");
        colourbool = !this.colourOverrideTxt.getText().equals("");

        this.check();
    }

    public void typeCheck() {
        typeRan = true;

        typeOverride = this.typeBox.getSelectedItem().equals("Override");
        typebool = !this.typeOverrideTxt.getText().equals("");

        this.check();
    }

    public void check() {
        if (colourRan && typeRan) {
            if (!this.massTxt.getText().equals("") && !this.yearTxt.getText().equals("") && ((colourbool && colourOverride) || (!colourOverride)) && ((typebool && typeOverride) || (!typeOverride))) {
                this.okBtn.setEnabled(true);
            } else {
                this.okBtn.setEnabled(false);
            }
        }
    }

    public void refresh() throws SQLException {
        try {
            Pinwheel.refreshColour();
            Pinwheel.refreshType();
            Pinwheel.refreshSupplier();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.colourBox.setModel(new DefaultComboBoxModel(Pinwheel.getColour().toArray()));
        this.typeBox.setModel(new DefaultComboBoxModel(Pinwheel.getType().toArray()));
        this.supplierBox.setModel(new DefaultComboBoxModel(Pinwheel.getSupplier().toArray()));

        System.out.println("adds");
        this.colourBox.addItem("Override");
        this.typeBox.addItem("Override");
        this.supplierBox.addItem("New Supplier...");
    }

    public void setSupplier(String a) throws SQLException {
        System.out.println("setssupp");
        this.refresh();
        System.out.println("refesh");
        this.supplierBox.setSelectedItem(a);
    }
}
